@using Tourtlee.BookingSystem.Web.Helpers;
@model Tourtlee.BookingSystem.Business.Dto.Accounts.CreateUserDto

@{
    Layout = "_AdminLayout";
    var user = Html.Angular().ModelFor("vm.createUser");
}

<script>
    System.import('admin/users/users.module.js');

    var usersConfig = {
        createUser: @Html.JsonFor(Model),
        apiUrl: '@Url.Action("Index", "UsersApi", new { Area = "Admin" })'
    };

    var organizationsConfig = {
        apiUrl: '@Url.Action("Index", "OrganizationsApi", new { Area = "Admin" })'
    };
</script>

<form class="form-horizontal" data-ng-controller="UsersCreateController as vm" name="createUserForm"
      data-ng-submit="vm.submit()" novalidate>

    <fieldset>
        <!-- Form Name -->
        <legend data-translate>users.create</legend>

        <div class="alert alert-info">
            Enter details for the new user below.
        </div>

        @user.FormGroupFor(u => u.Email)
        
        <span id="@user.PropertyFor(u=>u.Email)-help" class="help-block" ng-show="createUserForm.$submitted 
              || createUserForm.email.$touched">
            <ng-messages for="createUserForm.email.$error">
                <ng-message when="required">Field is required</ng-message>
                <ng-message when="email">Email is not valid</ng-message>
            </ng-messages>
        </span>

        @user.FormGroupFor(u => u.Password)

        <div class="has-feedback form-group" form-group-validation="passwordRepeat">
            <label class="col-md-4 control-label" data-translate="" for="passwordRepeat">createUserDto.passwordRepeat</label>
            <div class="col-md-4">
                <input class="form-control" name="passwordRepeat"
                       ng-model="@user.PropertyFor(u => u.PasswordRepeat)"
                       required="" type="text"
                       ui-validate=" '$value==vm.createUser.password' "
                       ui-validate-watch=" 'vm.createUser.password' " />
            </div>
        </div>

        <!-- Radios for OrganizationMode -->
        <div class="form-group">
            <label class="col-md-4 control-label" for="chooseOrganization" data-translate>users.organization</label>
            <div class="col-md-4">
                <div>
                    <input type="radio" name="chooseOrganization" id="chooseOrganization-1"
                           ng-model="@user.PropertyFor(u => u.OrganizationMode)"
                           value="0" />
                    <label for="chooseOrganization-0" data-translate>users.organizationChoose</label>
                </div>

                <div>
                    <input type="radio" name="chooseOrganization" id="chooseOrganization-0"
                           value="1" checked="checked" ng-model="@user.PropertyFor(u => u.OrganizationMode)" />
                    <label for="chooseOrganization-1" data-translate>users.organizationCreateNew </label>
                </div>
            </div>
        </div>

        <div class="form-group">
            <!-- UI Select for existing organization -->
            <div data-ng-show="@user.PropertyFor(u => u.OrganizationMode) == 0"
                 ng-class="{ 'has-error': createUserForm.$submitted && createUserForm.idOrganization.$invalid }">
                <label class="col-md-4 control-label" for="SelectOrganization" data-translate>users.organizationChoose</label>
                <div class="col-md-4">
                    <ui-select ng-model="@user.PropertyFor(u => u.IdOrganization)"
                               name="idOrganization"
                               ng-required="true">
                        <ui-select-match>{{$select.selected.name}}</ui-select-match>
                        <ui-select-choices repeat="organization.idOrganization as organization in vm.organizations | filter: $select.search">
                            <div ng-bind-html="organization.name"></div>
                        </ui-select-choices>
                    </ui-select>
                </div>
            </div>

            <!-- Input for new organzation name-->
            <div data-ng-show="@user.PropertyFor(u => u.OrganizationMode) == 1"
                 form-group-validation="organizationName">
                <label class="col-md-4 control-label" for="OrganizationName" data-translate>createUserDto.organizationName</label>
                <div class="col-md-4">
                    <input class="form-control"
                           ng-required="@user.PropertyFor(u => u.OrganizationMode) == 1"
                           name="organizationName"
                           ng-model="@user.PropertyFor(u => u.OrganizationName)" />
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-4 control-label"></label>
            <div class="col-md-6">
                <input type="submit" id="create"
                       name="Create" class="btn btn-success" data-ng-click="ctrl.CreateUser()"
                       translate="yes"
                       translate-attr-value="common.create"
                       value="common.create" />
                @Html.ActionLink("common.cancel", "Index", "Users", routeValues: new { Area = "Admin" },
           htmlAttributes: new { title = "Cancel", role = "button", @class = "btn btn-default", data_translate = "" })
            </div>
        </div>
    </fieldset>
</form>
